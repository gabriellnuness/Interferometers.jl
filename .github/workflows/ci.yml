name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: '*'

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch || 'x64' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'  # minimum julia version
          - '1'    # latest stable 1.x
          - 'nightly'
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        include:
          - os: macos-latest
            arch: x64  # Force x64 on macOS for Julia < 1.8
            version: '1.7'
          - os: macos-latest
            arch: ARM64  # Allow ARM64 for Julia >= 1.8
            version: '1'
          - os: macos-latest
            arch: ARM64
            version: 'nightly'
        python-version: ['3.9']
        
    steps:
      - uses: actions/checkout@v4

      # Python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch || 'x64' }}

      - name: Verify Python
        run: python -c "import sys; print(f'Python {sys.version}')"

      - name: Install matplotlib
        run: python -m pip install -U matplotlib

      # Julia setup
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch || 'x64' }}  # Default to x64 if arch not specified

      # Rest of your steps remain the same...
      - uses: actions/cache@v3
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/compiled
          key: ${{ runner.os }}-julia-${{ matrix.version }}-${{ matrix.arch || 'x64' }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.version }}-${{ matrix.arch || 'x64' }}-
            ${{ runner.os }}-julia-
            ${{ runner.os }}-

      - uses: julia-actions/julia-buildpkg@latest
        env:
          PYTHON: python

      - uses: julia-actions/julia-runtest@latest

      - uses: julia-actions/julia-processcoverage@latest

      # Failure notification
      - name: Notify on failure
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "‚ùå CI failed on ${{ matrix.os }} (${{ matrix.arch || 'x64' }}) with Julia ${{ matrix.version }}\n\n" +
                    "See details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            })
