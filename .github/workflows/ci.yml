name: CI
on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev
    tags: '*'

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'  # Minimum supported Julia version
          - '1'    # Latest stable 1.x
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64

    steps:
      # Install Python dependencies (if needed)
      - name: Install Python dependencies
        run: python -m pip install -U matplotlib

      # Checkout repository (updated to v4)
      - uses: actions/checkout@v4

      # Setup Julia (keep v1, it's correct)
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      # Cache Julia artifacts (updated to v3)
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/compiled  # Added for better caching
            ~/.julia/packages  # Added for better caching
          key: ${{ runner.os }}-julia-${{ matrix.version }}-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.version }}-${{ env.cache-name }}-
            ${{ runner.os }}-julia-${{ env.cache-name }}-

      # Standard Julia CI steps (keep these)
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
