name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: '*'

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'  # minimum julia version
          - '1'    # latest stable 1.x
          - 'nightly'
        os:
          - windows-latest
          - ubuntu-latest
        python-version: ['3.8', '3.9']

    steps:
      - uses: actions/checkout@v4

      # Python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install required Python dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U matplotlib numpy scipy

      - name: Verify Python integration in Julia
        run: |
          julia -e 'using PyCall; println(PyCall.python)'
          julia -e 'using Conda; Conda.update()'

      # Julia setup
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}

      # Caching
      - name: Cache Julia artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/compiled
          key: ${{ runner.os }}-julia-${{ matrix.version }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.version }}-
            ${{ runner.os }}-julia-
            ${{ runner.os }}-

      - name: Cache Julia packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.julia/packages
            ~/.julia/registries
          key: ${{ runner.os }}-julia-pkg-${{ matrix.version }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-pkg-${{ matrix.version }}-
            ${{ runner.os }}-julia-pkg-
            ${{ runner.os }}-

      # Build and test
      - uses: julia-actions/julia-buildpkg@latest
        env:
          PYTHON: python

      - uses: julia-actions/julia-runtest@latest

      - uses: julia-actions/julia-processcoverage@latest
